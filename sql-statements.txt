ALTER TABLE MPI_Data ADD Timestamp_Into_Queue DATETIME;
ALTER TABLE MPI_Data ADD Timestamp_Insertion DATETIME DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE MPI_Data ADD ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY FIRST;
ALTER TABLE MPI_Data ADD duration INT GENERATED ALWAYS AS (TIMESTAMPDIFF(second, timestamp_into_queue, timestamp_insertion));

CREATE TABLE MPI_Information (
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	function VARCHAR(255),
	communicationType VARCHAR(255),
	blocking BOOLEAN,
	datatype VARCHAR(255),
	count INT,
	sendcount INT,
	recvcount INT,
	datasize INT,
	operation VARCHAR(255),
	communicationArea VARCHAR(255),
	processorname VARCHAR(255),
	processrank INT,
	partnerrank INT,
	sendmode VARCHAR(255),
	immediate BOOLEAN,
	usedBtl VARCHAR(255),
	usedProtocol VARCHAR(255),
	withinEagerLimit BOOLEAN,
	foundMatchWild BOOLEAN,
	usedAlgorithm VARCHAR(255),
	time_start DATETIME(6),
	time_initializeRequest DATETIME(6),
	time_startRequest DATETIME(6),
	time_requestCompletePmlLevel DATETIME(6),
	time_requestWaitCompletion DATETIME(6),
	time_requestFini DATETIME(6),
	time_sent DATETIME(6),
	time_bufferFree DATETIME(6),
	time_intoQueue DATETIME(6),
	time_insertIntoDatabase DATETIME(6) DEFAULT CURRENT_TIMESTAMP,
	time_durationStartIntoQueue INT GENERATED ALWAYS AS (TIMESTAMPDIFF(MICROSECOND, time_start, time_intoQueue)),
	time_durationQueueDB INT GENERATED ALWAYS AS (TIMESTAMPDIFF(SECOND, time_intoQueue, time_insertIntoDatabase))
);

//Remove Table:
DROP TABLE MPI_Information;
